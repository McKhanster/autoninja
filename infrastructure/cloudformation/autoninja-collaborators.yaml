AWSTemplateFormatVersion: "2010-09-09"
Description: >
  AutoNinja Collaborators Stack - 5 collaborator Bedrock Agents with complete infrastructure.
  This is Step 1 of multi-agent collaboration setup.

Parameters:
  Environment:
    Type: String
    Description: Deployment environment
    Default: production

  BedrockModel:
    Type: String
    Description: Foundation model ID for Bedrock Agents
    Default: us.amazon.nova-premier-v1:0

  DynamoDBBillingMode:
    Type: String
    Description: Billing mode for DynamoDB tables
    Default: PAY_PER_REQUEST
    AllowedValues:
      - PAY_PER_REQUEST
      - PROVISIONED

  S3BucketName:
    Type: String
    Description: Optional custom name for S3 artifacts bucket
    Default: ""
    AllowedPattern: "^$|^[a-z0-9][a-z0-9-]*[a-z0-9]$"

  DeploymentBucket:
    Type: String
    Description: S3 bucket containing Lambda deployment packages and CloudFormation templates
    Default: ""

  LogRetentionDays:
    Type: Number
    Description: CloudWatch log retention period in days
    Default: 30
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]

Conditions:
  UseDefaultDeploymentBucket: !Equals [!Ref DeploymentBucket, ""]

Resources:
  # ============================================================================
  # IAM Role for Stack Management (for future deployments/cleanups)
  # ============================================================================
  StackManagementRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "AutoNinjaCollaboratorsManagementRole-${Environment}"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: BedrockAgentManagement
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - bedrock:CreateAgent
                  - bedrock:UpdateAgent
                  - bedrock:DeleteAgent
                  - bedrock:GetAgent
                  - bedrock:ListAgents
                  - bedrock:CreateAgentAlias
                  - bedrock:UpdateAgentAlias
                  - bedrock:DeleteAgentAlias
                  - bedrock:GetAgentAlias
                  - bedrock:PrepareAgent
                  - bedrock:InvokeAgent
                  - bedrock:AssociateAgentCollaborator
                  - bedrock:DisassociateAgentCollaborator
                Resource: "*"
              - Effect: Allow
                Action:
                  - cloudformation:CreateStack
                  - cloudformation:UpdateStack
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeStacks
                  - cloudformation:DescribeStackEvents
                  - cloudformation:DescribeStackResources
                Resource: !Sub "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/autoninja-*"
              - Effect: Allow
                Action:
                  - iam:PassRole
                  - iam:GetRole
                  - iam:CreateRole
                  - iam:DeleteRole
                  - iam:AttachRolePolicy
                  - iam:DetachRolePolicy
                Resource: !Sub "arn:aws:iam::${AWS::AccountId}:role/AutoNinja*"
              - Effect: Allow
                Action:
                  - lambda:DeleteFunction
                  - lambda:GetFunction
                Resource: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:autoninja-*"
              - Effect: Allow
                Action:
                  - bedrock-agentcore:DeleteMemory
                  - bedrock-agentcore:GetMemory
                  - bedrock-agentcore:ListMemories
                Resource: !Sub "arn:aws:bedrock-agentcore:${AWS::Region}:${AWS::AccountId}:memory/*"
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: AutoNinja
        - Key: Purpose
          Value: StackManagement

  # ============================================================================
  # AgentCore Memory for Rate Limiting (shared across all agents)
  # ============================================================================
  AgentCoreMemory:
    Type: AWS::BedrockAgentCore::Memory
    Properties:
      Name: !Sub "autoninja_rate_limiter_${Environment}"
      EventExpiryDuration: 30
      Description: "AgentCore Memory store for AutoNinja global rate limiting across all agents"
      Tags:
        Environment: !Ref Environment
        Application: AutoNinja
        Purpose: RateLimiting

  # Storage Stack - DynamoDB + S3 + Rate Limiter
  StorageStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - "https://${Bucket}.s3.${AWS::Region}.amazonaws.com/stacks/storage.yaml"
        - Bucket: !If
            - UseDefaultDeploymentBucket
            - !Sub "autoninja-deployment-artifacts-${AWS::Region}"
            - !Ref DeploymentBucket
      Parameters:
        Environment: !Ref Environment
        DynamoDBBillingMode: !Ref DynamoDBBillingMode
        S3BucketName: !Ref S3BucketName

  # Lambda Layer Stack - Shared Libraries + Base IAM Policy
  LambdaLayerStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: StorageStack
    Properties:
      TemplateURL: !Sub
        - "https://${Bucket}.s3.${AWS::Region}.amazonaws.com/stacks/lambda-layer.yaml"
        - Bucket: !If
            - UseDefaultDeploymentBucket
            - !Sub "autoninja-deployment-artifacts-${AWS::Region}"
            - !Ref DeploymentBucket
      Parameters:
        Environment: !Ref Environment
        DeploymentBucket: !If
          - UseDefaultDeploymentBucket
          - !Sub "autoninja-deployment-artifacts-${AWS::Region}"
          - !Ref DeploymentBucket
        InferenceRecordsTableArn: !GetAtt StorageStack.Outputs.InferenceRecordsTableArn
        ArtifactsBucketArn: !GetAtt StorageStack.Outputs.ArtifactsBucketArn

  # Custom Orchestration Stack - No lonimiting Lambda
  CustomOrchestrationStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - "https://${Bucket}.s3.${AWS::Region}.amazonaws.com/stacks/custom-orchestration.yaml"
        - Bucket: !If
            - UseDefaultDeploymentBucket
            - !Sub "autoninja-deployment-artifacts-${AWS::Region}"
            - !Ref DeploymentBucket
      Parameters:
        Environment: !Ref Environment
        DeploymentBucket: !If
          - UseDefaultDeploymentBucket
          - !Sub "autoninja-deployment-artifacts-${AWS::Region}"
          - !Ref DeploymentBucket
        LogRetentionDays: !Ref LogRetentionDays

  # Collaborator Agent Stacks (5 agents)
  RequirementsAnalystStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - "https://${Bucket}.s3.${AWS::Region}.amazonaws.com/stacks/requirements-analyst.yaml"
        - Bucket: !If
            - UseDefaultDeploymentBucket
            - !Sub "autoninja-deployment-artifacts-${AWS::Region}"
            - !Ref DeploymentBucket
      Parameters:
        Environment: !Ref Environment
        BedrockModel: !Ref BedrockModel
        DeploymentBucket: !If
          - UseDefaultDeploymentBucket
          - !Sub "autoninja-deployment-artifacts-${AWS::Region}"
          - !Ref DeploymentBucket
        InferenceRecordsTableName: !GetAtt StorageStack.Outputs.InferenceRecordsTableName
        InferenceRecordsTableArn: !GetAtt StorageStack.Outputs.InferenceRecordsTableArn
        ArtifactsBucketName: !GetAtt StorageStack.Outputs.ArtifactsBucketName
        ArtifactsBucketArn: !GetAtt StorageStack.Outputs.ArtifactsBucketArn
        LambdaLayerArn: !GetAtt LambdaLayerStack.Outputs.LayerArn
        LambdaBasePolicyArn: !GetAtt LambdaLayerStack.Outputs.LambdaBasePolicyArn
        LogRetentionDays: !Ref LogRetentionDays
        AgentCoreMemoryId: !GetAtt AgentCoreMemory.MemoryId
        AgentCoreMemoryArn: !GetAtt AgentCoreMemory.MemoryArn

  CodeGeneratorStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - "https://${Bucket}.s3.${AWS::Region}.amazonaws.com/stacks/code-generator.yaml"
        - Bucket: !If
            - UseDefaultDeploymentBucket
            - !Sub "autoninja-deployment-artifacts-${AWS::Region}"
            - !Ref DeploymentBucket
      Parameters:
        Environment: !Ref Environment
        BedrockModel: !Ref BedrockModel
        DeploymentBucket: !If
          - UseDefaultDeploymentBucket
          - !Sub "autoninja-deployment-artifacts-${AWS::Region}"
          - !Ref DeploymentBucket
        InferenceRecordsTableName: !GetAtt StorageStack.Outputs.InferenceRecordsTableName
        InferenceRecordsTableArn: !GetAtt StorageStack.Outputs.InferenceRecordsTableArn
        ArtifactsBucketName: !GetAtt StorageStack.Outputs.ArtifactsBucketName
        ArtifactsBucketArn: !GetAtt StorageStack.Outputs.ArtifactsBucketArn
        LambdaLayerArn: !GetAtt LambdaLayerStack.Outputs.LayerArn
        LambdaBasePolicyArn: !GetAtt LambdaLayerStack.Outputs.LambdaBasePolicyArn
        LogRetentionDays: !Ref LogRetentionDays
        AgentCoreMemoryId: !GetAtt AgentCoreMemory.MemoryId
        AgentCoreMemoryArn: !GetAtt AgentCoreMemory.MemoryArn

  SolutionArchitectStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - "https://${Bucket}.s3.${AWS::Region}.amazonaws.com/stacks/solution-architect.yaml"
        - Bucket: !If
            - UseDefaultDeploymentBucket
            - !Sub "autoninja-deployment-artifacts-${AWS::Region}"
            - !Ref DeploymentBucket
      Parameters:
        Environment: !Ref Environment
        BedrockModel: !Ref BedrockModel
        DeploymentBucket: !If
          - UseDefaultDeploymentBucket
          - !Sub "autoninja-deployment-artifacts-${AWS::Region}"
          - !Ref DeploymentBucket
        InferenceRecordsTableName: !GetAtt StorageStack.Outputs.InferenceRecordsTableName
        InferenceRecordsTableArn: !GetAtt StorageStack.Outputs.InferenceRecordsTableArn
        ArtifactsBucketName: !GetAtt StorageStack.Outputs.ArtifactsBucketName
        ArtifactsBucketArn: !GetAtt StorageStack.Outputs.ArtifactsBucketArn
        LambdaLayerArn: !GetAtt LambdaLayerStack.Outputs.LayerArn
        LambdaBasePolicyArn: !GetAtt LambdaLayerStack.Outputs.LambdaBasePolicyArn
        LogRetentionDays: !Ref LogRetentionDays
        AgentCoreMemoryId: !GetAtt AgentCoreMemory.MemoryId
        AgentCoreMemoryArn: !GetAtt AgentCoreMemory.MemoryArn

  QualityValidatorStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - "https://${Bucket}.s3.${AWS::Region}.amazonaws.com/stacks/quality-validator.yaml"
        - Bucket: !If
            - UseDefaultDeploymentBucket
            - !Sub "autoninja-deployment-artifacts-${AWS::Region}"
            - !Ref DeploymentBucket
      Parameters:
        Environment: !Ref Environment
        BedrockModel: !Ref BedrockModel
        DeploymentBucket: !If
          - UseDefaultDeploymentBucket
          - !Sub "autoninja-deployment-artifacts-${AWS::Region}"
          - !Ref DeploymentBucket
        InferenceRecordsTableName: !GetAtt StorageStack.Outputs.InferenceRecordsTableName
        InferenceRecordsTableArn: !GetAtt StorageStack.Outputs.InferenceRecordsTableArn
        ArtifactsBucketName: !GetAtt StorageStack.Outputs.ArtifactsBucketName
        ArtifactsBucketArn: !GetAtt StorageStack.Outputs.ArtifactsBucketArn
        LambdaLayerArn: !GetAtt LambdaLayerStack.Outputs.LayerArn
        LambdaBasePolicyArn: !GetAtt LambdaLayerStack.Outputs.LambdaBasePolicyArn
        LogRetentionDays: !Ref LogRetentionDays
        AgentCoreMemoryId: !GetAtt AgentCoreMemory.MemoryId
        AgentCoreMemoryArn: !GetAtt AgentCoreMemory.MemoryArn

  DeploymentManagerStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - "https://${Bucket}.s3.${AWS::Region}.amazonaws.com/stacks/deployment-manager.yaml"
        - Bucket: !If
            - UseDefaultDeploymentBucket
            - !Sub "autoninja-deployment-artifacts-${AWS::Region}"
            - !Ref DeploymentBucket
      Parameters:
        Environment: !Ref Environment
        BedrockModel: !Ref BedrockModel
        DeploymentBucket: !If
          - UseDefaultDeploymentBucket
          - !Sub "autoninja-deployment-artifacts-${AWS::Region}"
          - !Ref DeploymentBucket
        InferenceRecordsTableName: !GetAtt StorageStack.Outputs.InferenceRecordsTableName
        InferenceRecordsTableArn: !GetAtt StorageStack.Outputs.InferenceRecordsTableArn
        ArtifactsBucketName: !GetAtt StorageStack.Outputs.ArtifactsBucketName
        ArtifactsBucketArn: !GetAtt StorageStack.Outputs.ArtifactsBucketArn
        LambdaLayerArn: !GetAtt LambdaLayerStack.Outputs.LayerArn
        LambdaBasePolicyArn: !GetAtt LambdaLayerStack.Outputs.LambdaBasePolicyArn
        LogRetentionDays: !Ref LogRetentionDays
        AgentCoreMemoryId: !GetAtt AgentCoreMemory.MemoryId
        AgentCoreMemoryArn: !GetAtt AgentCoreMemory.MemoryArn

Outputs:
  # Collaborator Agent IDs and Alias IDs for supervisor setup
  RequirementsAnalystAgentId:
    Description: Requirements Analyst Agent ID
    Value: !GetAtt RequirementsAnalystStack.Outputs.AgentId
    Export:
      Name: !Sub "${AWS::StackName}-RequirementsAnalystAgentId"

  RequirementsAnalystAgentArn:
    Description: Requirements Analyst Agent ARN
    Value: !GetAtt RequirementsAnalystStack.Outputs.AgentArn
    Export:
      Name: !Sub "${AWS::StackName}-RequirementsAnalystAgentArn"

  RequirementsAnalystAliasId:
    Description: Requirements Analyst Agent Alias ID
    Value: !GetAtt RequirementsAnalystStack.Outputs.AgentAliasId
    Export:
      Name: !Sub "${AWS::StackName}-RequirementsAnalystAliasId"

  CodeGeneratorAgentId:
    Description: Code Generator Agent ID
    Value: !GetAtt CodeGeneratorStack.Outputs.AgentId
    Export:
      Name: !Sub "${AWS::StackName}-CodeGeneratorAgentId"

  CodeGeneratorAgentArn:
    Description: Code Generator Agent ARN
    Value: !GetAtt CodeGeneratorStack.Outputs.AgentArn
    Export:
      Name: !Sub "${AWS::StackName}-CodeGeneratorAgentArn"

  CodeGeneratorAliasId:
    Description: Code Generator Agent Alias ID
    Value: !GetAtt CodeGeneratorStack.Outputs.AgentAliasId
    Export:
      Name: !Sub "${AWS::StackName}-CodeGeneratorAliasId"

  SolutionArchitectAgentId:
    Description: Solution Architect Agent ID
    Value: !GetAtt SolutionArchitectStack.Outputs.AgentId
    Export:
      Name: !Sub "${AWS::StackName}-SolutionArchitectAgentId"

  SolutionArchitectAgentArn:
    Description: Solution Architect Agent ARN
    Value: !GetAtt SolutionArchitectStack.Outputs.AgentArn
    Export:
      Name: !Sub "${AWS::StackName}-SolutionArchitectAgentArn"

  SolutionArchitectAliasId:
    Description: Solution Architect Agent Alias ID
    Value: !GetAtt SolutionArchitectStack.Outputs.AgentAliasId
    Export:
      Name: !Sub "${AWS::StackName}-SolutionArchitectAliasId"

  QualityValidatorAgentId:
    Description: Quality Validator Agent ID
    Value: !GetAtt QualityValidatorStack.Outputs.AgentId
    Export:
      Name: !Sub "${AWS::StackName}-QualityValidatorAgentId"

  QualityValidatorAgentArn:
    Description: Quality Validator Agent ARN
    Value: !GetAtt QualityValidatorStack.Outputs.AgentArn
    Export:
      Name: !Sub "${AWS::StackName}-QualityValidatorAgentArn"

  QualityValidatorAliasId:
    Description: Quality Validator Agent Alias ID
    Value: !GetAtt QualityValidatorStack.Outputs.AgentAliasId
    Export:
      Name: !Sub "${AWS::StackName}-QualityValidatorAliasId"

  DeploymentManagerAgentId:
    Description: Deployment Manager Agent ID
    Value: !GetAtt DeploymentManagerStack.Outputs.AgentId
    Export:
      Name: !Sub "${AWS::StackName}-DeploymentManagerAgentId"

  DeploymentManagerAgentArn:
    Description: Deployment Manager Agent ARN
    Value: !GetAtt DeploymentManagerStack.Outputs.AgentArn
    Export:
      Name: !Sub "${AWS::StackName}-DeploymentManagerAgentArn"

  DeploymentManagerAliasId:
    Description: Deployment Manager Agent Alias ID
    Value: !GetAtt DeploymentManagerStack.Outputs.AgentAliasId
    Export:
      Name: !Sub "${AWS::StackName}-DeploymentManagerAliasId"

  # Storage Outputs
  InferenceRecordsTableName:
    Description: DynamoDB inference records table name
    Value: !GetAtt StorageStack.Outputs.InferenceRecordsTableName
    Export:
      Name: !Sub "${AWS::StackName}-InferenceRecordsTableName"

  ArtifactsBucketName:
    Description: S3 artifacts bucket name
    Value: !GetAtt StorageStack.Outputs.ArtifactsBucketName
    Export:
      Name: !Sub "${AWS::StackName}-ArtifactsBucketName"

  # AgentCore Memory Outputs (for supervisor)
  AgentCoreMemoryId:
    Description: AgentCore Memory ID for rate limiting
    Value: !GetAtt AgentCoreMemory.MemoryId
    Export:
      Name: !Sub "${AWS::StackName}-AgentCoreMemoryId"

  AgentCoreMemoryArn:
    Description: AgentCore Memory ARN for rate limiting
    Value: !GetAtt AgentCoreMemory.MemoryArn
    Export:
      Name: !Sub "${AWS::StackName}-AgentCoreMemoryArn"

  StackManagementRoleArn:
    Description: ARN of the IAM role for managing collaborator deployments and cleanups
    Value: !GetAtt StackManagementRole.Arn
    Export:
      Name: !Sub "${AWS::StackName}-StackManagementRoleArn"

  Environment:
    Description: Deployment environment
    Value: !Ref Environment
    Export:
      Name: !Sub "${AWS::StackName}-Environment"
