AWSTemplateFormatVersion: '2010-09-09'
Description: |
  AutoNinja Supervisor Stack - Bedrock Supervisor Agent with direct Lambda orchestration across 5 agent Lambda functions using AgentCore Memory rate limiting.
Parameters:
  Environment:
    Type: String
    Description: Deployment environment
    Default: production
  BedrockModel:
    Type: String
    Description: Foundation model ID for Bedrock Supervisor Agent
    Default: us.amazon.nova-premier-v1:0
  ArtifactsBucketName:
    Type: String
    Description: Name of the S3 artifacts bucket
  InferenceRecordsTableName:
    Type: String
    Description: Name of the DynamoDB inference records table
  InferenceRecordsTableArn:
    Type: String
    Description: ARN of the DynamoDB inference records table
  ArtifactsBucketArn:
    Type: String
    Description: ARN of the S3 artifacts bucket
  DeploymentBucket:
    Type: String
    Description: S3 bucket containing deployment artifacts and schemas
  AgentCoreMemoryId:
    Type: String
    Description: AgentCore Memory ID for rate limiting
  AgentCoreMemoryArn:
    Type: String
    Description: AgentCore Memory Arn for rate limiting
  LogRetentionDays:
    Type: Number
    Description: CloudWatch log retention period
    Default: 30
Resources:
  SupervisorLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess
      Policies:
        - PolicyName: SupervisorLambdaPermissions
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: BedrockModelAccess
                Effect: Allow
                Action:
                  - bedrock:InvokeModel
                  - bedrock:InvokeModelWithResponseStream
                  - bedrock:GetInferenceProfile
                  - bedrock:GetFoundationModel
                Resource:
                  - !Sub arn:aws:bedrock:${AWS::Region}::foundation-model/${BedrockModel}
                  - !Sub arn:aws:bedrock:${AWS::Region}:${AWS::AccountId}:inference-profile/${BedrockModel}
                  - !Sub arn:aws:bedrock:*::foundation-model/*
                  - !Sub arn:aws:bedrock:*:${AWS::AccountId}:inference-profile/*
              - Sid: BedrockGeneralAccess
                Effect: Allow
                Action:
                  - bedrock:GetInferenceProfile
                  - bedrock:GetFoundationModel
                Resource: '*'
              - Sid: InvokeLambdaFunctions
                Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource:
                  - !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:autoninja-code-generator-${Environment}
                  - !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:autoninja-solution-architect-${Environment}
                  - !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:autoninja-quality-validator-${Environment}
                  - !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:autoninja-deployment-manager-${Environment}
              - Sid: AgentCoreMemoryAccess
                Effect: Allow
                Action:
                  - bedrock-agentcore:CreateEvent
                  - bedrock-agentcore:RetrieveMemoryRecords
                  - bedrock-agentcore:BatchCreateMemoryRecords
                Resource:
                  - !Ref AgentCoreMemoryArn
              - Sid: BedrockAgentInvocation
                Effect: Allow
                Action:
                  - bedrock:InvokeAgent
                Resource:
                  - !Sub arn:aws:bedrock:${AWS::Region}:${AWS::AccountId}:agent-alias/*
              - Sid: CloudFormationReadAccess
                Effect: Allow
                Action:
                  - cloudformation:DescribeStacks
                Resource:
                  - !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/autoninja-collaborators-*/*
              - Sid: CloudFormationDeploymentAccess
                Effect: Allow
                Action:
                  - cloudformation:CreateStack
                  - cloudformation:UpdateStack
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeStacks
                  - cloudformation:DescribeStackEvents
                  - cloudformation:DescribeStackResources
                  - cloudformation:GetTemplate
                  - cloudformation:ValidateTemplate
                Resource:
                  - !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/job-*/*
                  - !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/stack-*/*
              - Sid: IAMPassRoleForDeployment
                Effect: Allow
                Action:
                  - iam:PassRole
                  - iam:CreateRole
                  - iam:DeleteRole
                  - iam:GetRole
                  - iam:AttachRolePolicy
                  - iam:DetachRolePolicy
                  - iam:PutRolePolicy
                  - iam:DeleteRolePolicy
                  - iam:GetRolePolicy
                  - iam:TagRole
                  - iam:UntagRole
                Resource:
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/job-*
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/stack-*
              - Sid: LambdaDeploymentAccess
                Effect: Allow
                Action:
                  - lambda:CreateFunction
                  - lambda:UpdateFunctionCode
                  - lambda:UpdateFunctionConfiguration
                  - lambda:DeleteFunction
                  - lambda:GetFunction
                  - lambda:AddPermission
                  - lambda:RemovePermission
                  - lambda:TagResource
                  - lambda:UntagResource
                  - lambda:PublishVersion
                Resource:
                  - !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:job-*
                  - !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:stack-*
              - Sid: BedrockAgentDeploymentAccess
                Effect: Allow
                Action:
                  - bedrock:CreateAgent
                  - bedrock:UpdateAgent
                  - bedrock:DeleteAgent
                  - bedrock:GetAgent
                  - bedrock:PrepareAgent
                  - bedrock:CreateAgentAlias
                  - bedrock:UpdateAgentAlias
                  - bedrock:DeleteAgentAlias
                  - bedrock:GetAgentAlias
                  - bedrock:CreateAgentActionGroup
                  - bedrock:UpdateAgentActionGroup
                  - bedrock:DeleteAgentActionGroup
                  - bedrock:GetAgentActionGroup
                  - bedrock:TagResource
                  - bedrock:UntagResource
                Resource:
                  - !Sub arn:aws:bedrock:${AWS::Region}:${AWS::AccountId}:agent/*
                  - !Sub arn:aws:bedrock:${AWS::Region}:${AWS::AccountId}:agent-alias/*/*
              - Sid: CloudWatchLogs
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/autoninja-supervisor-*
              - Sid: DynamoDBAccess
                Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:GetItem
                  - dynamodb:Query
                  - dynamodb:UpdateItem
                Resource:
                  - !Ref InferenceRecordsTableArn
                  - !Sub ${InferenceRecordsTableArn}/index/*
              - Sid: S3DeploymentAccess
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                Resource:
                  - !Sub arn:aws:s3:::${DeploymentBucket}/*
                  - !Sub arn:aws:s3:::${DeploymentBucket}/schemas/*
              - Sid: S3DeploymentBucketList
                Effect: Allow
                Action:
                  - s3:ListBucket
                Resource:
                  - !Sub arn:aws:s3:::${DeploymentBucket}
              - Sid: S3Access
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:ListBucket
                Resource:
                  - !Ref ArtifactsBucketArn
                  - !Sub ${ArtifactsBucketArn}/*
              - Sid: S3DeploymentArtifactsAccess
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:ListBucket
                Resource:
                  - !Sub arn:aws:s3:::autoninja-deployment-artifacts-${AWS::Region}
                  - !Sub arn:aws:s3:::autoninja-deployment-artifacts-${AWS::Region}/*
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: AutoNinja
  SupervisorLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub autoninja-supervisor-${Environment}
      Runtime: python3.12
      Handler: handler.lambda_handler
      Role: !GetAtt SupervisorLambdaRole.Arn
      Code:
        S3Bucket: !Ref DeploymentBucket
        S3Key: lambda/supervisor-agentcore.zip
      Environment:
        Variables:
          MEMORY_ID: !Ref AgentCoreMemoryId
          CODE_GENERATOR_LAMBDA_NAME: !Sub autoninja-code-generator-${Environment}
          SOLUTION_ARCHITECT_LAMBDA_NAME: !Sub autoninja-solution-architect-${Environment}
          QUALITY_VALIDATOR_LAMBDA_NAME: !Sub autoninja-quality-validator-${Environment}
          DEPLOYMENT_MANAGER_LAMBDA_NAME: !Sub autoninja-deployment-manager-${Environment}
          DYNAMODB_TABLE_NAME: !Ref InferenceRecordsTableName
          S3_BUCKET_NAME: !Ref ArtifactsBucketName
          ARTIFACTS_BUCKET_NAME: !Ref ArtifactsBucketName
          INFERENCE_RECORDS_TABLE_ARN: !Ref InferenceRecordsTableArn
      Timeout: 900
      MemorySize: 512
      TracingConfig:
        Mode: Active
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: AutoNinja
  AgentRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: bedrock.amazonaws.com
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref AWS::AccountId
              ArnLike:
                aws:SourceArn: !Sub arn:aws:bedrock:${AWS::Region}:${AWS::AccountId}:agent/*
      Policies:
        - PolicyName: SupervisorPermissions
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: InvokeModel
                Effect: Allow
                Action:
                  - bedrock:InvokeModel
                  - bedrock:InvokeModelWithResponseStream
                  - bedrock:GetInferenceProfile
                  - bedrock:GetFoundationModel
                Resource:
                  - !Sub arn:aws:bedrock:${AWS::Region}::foundation-model/${BedrockModel}
                  - !Sub arn:aws:bedrock:${AWS::Region}:${AWS::AccountId}:inference-profile/${BedrockModel}
                  - !Sub arn:aws:bedrock:*::foundation-model/*
                  - !Sub arn:aws:bedrock:*:${AWS::AccountId}:inference-profile/*
              - Sid: GetModelInfo
                Effect: Allow
                Action:
                  - bedrock:GetInferenceProfile
                  - bedrock:GetFoundationModel
                Resource: '*'
              - Sid: AgentCoreMemoryAccess
                Effect: Allow
                Action:
                  - bedrock-agentcore:CreateEvent
                  - bedrock-agentcore:RetrieveMemoryRecords
                  - bedrock-agentcore:BatchCreateMemoryRecords
                Resource:
                  - !Ref AgentCoreMemoryArn
              - Sid: ApiSchemaAccess
                Effect: Allow
                Action:
                  - s3:GetObject
                Resource:
                  - !Sub arn:aws:s3:::${DeploymentBucket}/schemas/supervisor-schema.yaml
              - Sid: KMSAccessForSchema
                Effect: Allow
                Action:
                  - kms:Decrypt
                Resource:
                  - !Sub arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/*
              - Sid: CloudWatchLogs
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/bedrock/agents/autoninja-supervisor-${Environment}*
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: AutoNinja
  Agent:
    Type: AWS::Bedrock::Agent
    Properties:
      AgentName: !Sub autoninja-supervisor-${Environment}
      Description: Supervisor agent orchestrating 5 collaborator agents for generating Bedrock Agents from natural language
      AgentResourceRoleArn: !GetAtt AgentRole.Arn
      FoundationModel: !Ref BedrockModel
      AgentCollaboration: DISABLED
      IdleSessionTTLInSeconds: 3600
      AutoPrepare: true
      Instruction: |
        You are the AutoNinja Orchestration Supervisor - a Senior AI Systems Architect with 15+ years of experience in enterprise AI system design, project management, and quality assurance. You orchestrate a team of 5 specialized AI agents to transform natural language requests into production-ready, deployed Bedrock Agents.
      PromptOverrideConfiguration:
        PromptConfigurations:
          - PromptType: ORCHESTRATION
            PromptCreationMode: OVERRIDDEN
            PromptState: ENABLED
            InferenceConfiguration:
              MaximumLength: 30000
              Temperature: 0
              TopP: 0.9
              StopSequences: []
            BasePromptTemplate: '{"schemaVersion":"messages-v1","system":[{"text":"YouaretheRequirementsAnalyst(RA)forAutoninja,anAIagentgenerationsystem.Yourroleistoanalyzenaturallanguagerequestsandproducecomprehensive,structuredrequirementsthatenabletheSolutionArchitect,CodeGenerator,DeploymentManager,andQualityValidatortobuildproduction-readyAIagentsonAWS.\r\n\r\nCoreResponsibility\r\n\r\nTransformnaturallanguageagentrequestsintodetailedtechnicalrequirementsby:\r\n1.Analyzingtheuser''sintentandextractingexplicit\/implicitrequirements\r\n2.Inferringtechnicalneedsbasedonagenttypeandusecase\r\n3.Definingsuccesscriteriaandvalidationmethods\r\n4.ProducingstructuredJSONoutputforalldownstreamagents\r\n\r\nOperatingMode\r\n\r\nYouareoperatinginGENERATIONMODE(DevelopmentPhase).Youwillprocessrequestsassumingsufficientinformationisprovidedanduseintelligentdefaultswhereneeded.\r\n\r\nAgentTypeClassification\r\n\r\nClassifytherequestedagentintooneofthesecategories:\r\n-conversational:Chatbots,supportagents,companionagents,QAsystems\r\n-analytical:Dataanalysis,reporting,insightsgeneration,patternrecognition\r\n-automation:Workflowautomation,taskexecution,processmanagement,orchestration\r\n-monitoring:Systemmonitoring,alerting,anomalydetection,healthchecks\r\n-creative:Contentgeneration,writingassistance,designsuggestions\r\n-hybrid:Combinationofmultipletypes\r\n\r\nRequirementsExtractionFramework\r\n\r\n1.FunctionalRequirementsAnalysis\r\n-CoreCapabilities:Primaryfunctionstheagentmustperform\r\n-InputProcessing:Typesofinputsandhowtohandlethem\r\n-OutputGeneration:Expectedoutputsandformats\r\n-BusinessLogic:Rules,conditions,anddecisiontrees\r\n-UserInteraction:Interfacemethodsandinteractionpatterns\r\n\r\n2.Non-FunctionalRequirementsAnalysis\r\n-Performance:Responsetime,throughput,concurrency\r\n-Scalability:Growthprojections,elasticityneeds\r\n-Reliability:Availabilitytargets,faulttolerance\r\n-Security:Authentication,authorization,dataprotection\r\n-Compliance:Regulatoryrequirements,datagovernance\r\n\r\n3.TechnicalRequirementsInference\r\n-ModelSelection:Basedoncomplexityandcapabilitiesneeded\r\n-AWSServices:Requiredservicesbasedonscaleandfeatures\r\n-IntegrationPatterns:Sync\/async,event-driven,batchprocessing\r\n-DataManagement:Storageneeds,retention,processing\r\n\r\nOutputGenerationRules\r\n\r\nPriorityMapping\r\n-P0(Critical):Agentcannotfunctionwithoutthis\r\n-P1(Important):Significantlydegradedexperiencewithoutthis\r\n-P2(Nice-to-have):Enhancementthatcanbeaddedlater\r\n\r\nDefaultValuesforCommonScenarios\r\n-ResponseTime:2secondsforconversational,5secondsforanalytical\r\n-Availability:99.9%forproductionagents\r\n-ConcurrentUsers:100forstandard,1000forenterprise\r\n-Memory:512MBforsimple,1024MBforcomplex\r\n-Timeout:30secondsstandard,300secondsforanalytical\r\n\r\nModelSelectionGuidelines(Ifnotspecified)\r\n-Simpletasks:ClaudeHaikuorGPT-3.5\r\n-Complexreasoning:ClaudeSonnetorGPT-4\r\n-Creative\/Advanced:ClaudeOpusorGPT-4Turbo\r\n-Default:AmazonNovaPremier\r\n\r\nProcessingExamples\r\n\r\nExample1:CompanionAgentRequest\r\nInput:Makemeacompanionagent\r\nAnalysis:\r\n-Type:conversational\r\n-Infer:Casualinteraction,emotionalsupport,generalconversation\r\n-Applydefaults:Claude-3-Sonnet,Lambdadeployment,DynamoDBforcontext\r\n\r\nExample2:DataAnalysisAgentRequest\r\nInput:Buildanagentthatanalyzessalesdataandgeneratesweeklyreports\r\nAnalysis:\r\n-Type:analytical\r\n-Extract:Salesdataprocessing,weeklyscheduling,reportgeneration\r\n-Infer:S3fordatastorage,EventBridgeforscheduling,highertimeoutvalues\r\n\r\nExample3:MonitoringAgentRequest\r\nInput:CreateanagenttomonitorourAPIendpointsandalertonfailures\r\nAnalysis:\r\n-Type:monitoring\r\n-Extract:APImonitoring,failuredetection,alerting\r\n-Infer:CloudWatchintegration,SNSforalerts,lowlatencyrequirements\r\n\r\nQualityAssuranceRules\r\n\r\n1.Completeness:EveryfieldintheJSONstructuremusthaveavalue(useintelligentdefaults)\r\n2.Consistency:Requirementsacrossdifferentsectionsmustalign\r\n3.Feasibility:Technicalrequirementsmustbeachievablewithinconstraints\r\n4.Specificity:Avoidvagueterms;provideconcrete,measurablecriteria\r\n5.Traceability:Eachrequirementshouldmaptovalidationcriteria\r\n\r\nErrorPrevention\r\n\r\n-Ifconflictingrequirementsdetected:Choosethemoreconservativeoptionandnoteinrisk_assessment\r\n-Ifimpossibleconstraints:Adjusttonearestfeasiblevaluesanddocument\r\n-Ifmissingcriticalinfo:Useindustrybestpracticesasdefaults\r\n-Ifambiguousintent:Choosetheinterpretationthatmaximizesuservalue\r\n\r\nFinalValidationBeforeOutput\r\n\r\nBeforegeneratingthefinalJSON:\r\n1.Verifyallrequiredfieldsarepopulated\r\n2.Checkforlogicalconsistencyacrossrequirements\r\n3.EnsureallIDsareuniqueandfollownamingconventions\r\n4.Validatethatperformancerequirementsarerealistic\r\n5.Confirmvalidationcriteriaaremeasurableandtestable\r\n\r\nRemember:Youroutputdirectlyfeedsintoautomatedsystems.Precisionandcompletenessarecritical.TheQualityValidatorwilluseyourrequirementsasthesourceoftruthforvalidatingallotheragents''work."}],"messages":[{"role":"user","content":[{"text":"$question$"}]}],"inferenceConfig":{"temperature":0,"maxTokens":30000,"topP":0.9,"stopSequences":[]},"additionalModelRequestFields":{"inferenceConfig":{"outputSchema":{"type":"object","properties":{"metadata":{"request_id":"string(generateUUID)","agent_name":"string(descriptivenamebasedonpurpose)","agent_type":"conversational|analytical|automation|monitoring|creative|hybrid","complexity_level":"simple|moderate|complex","estimated_development_hours":"number","timestamp":"ISO-8601","version":"1.0"},"solution_architect_requirements":{"context":"string","agent_overview":{"name":"string","type":"string","business_purpose":"string(cleardescription)","expected_users":"number","deployment_environment":"development|staging|production"},"system_architecture":{"compute_pattern":"serverless|containerized|server-based","suggested_model":"string(specificmodelname)","model_parameters":{"temperature":"number","max_tokens":"number","top_p":"number"}},"performance_requirements":{"expected_requests_per_minute":"number","response_time_p95_ms":"number","availability_percentage":"number","concurrent_users":"number","data_volume_gb_per_month":"number"},"integration_requirements":{"external_apis":[{"service":"string","purpose":"string","auth_method":"string"}],"aws_services":["string(e.g.,S3,DynamoDB,SQS)"],"data_sources":["string"],"event_sources":["string"]},"scalability_needs":{"auto_scaling":"boolean","min_instances":"number","max_instances":"number","scale_triggers":["string"]},"security_requirements":{"authentication":"string","authorization_model":"string","data_encryption":"at-rest|in-transit|both","compliance_standards":["string"],"sensitive_data_handling":"string"},"constraints":{"budget_usd_per_month":"number","deployment_deadline":"ISO-8601","technical_limitations":["string"],"regulatory_requirements":["string"]}},"code_generator_requirements":{"context":"string","agent_configuration":{"name":"string","primary_model":"string(exactmodelidentifier)","fallback_model":"string(optional)","execution_environment":"lambda|ecs|ec2"},"system_prompt_specification":{"agent_persona":"string","capabilities_description":"string","behavioral_guidelines":["string"],"knowledge_domain":"string","output_format_requirements":"string","example_interactions":[{"user_input":"string","expected_response":"string"}]},"functions_to_implement":[{"function_name":"string(snake_case)","purpose":"string","trigger":"api|event|scheduled","input_parameters":[{"name":"string","type":"string","required":"boolean","validation":"string"}],"business_logic":"string(detaileddescription)","output_specification":{"type":"string","format":"string","example":"object"},"error_handling":[{"error_type":"string","handling_strategy":"string"}],"dependencies":["string"]}],"data_schemas":{"input_schema":{"description":"string","properties":{},"required":["string"]},"output_schema":{"description":"string","properties":{},"required":["string"]},"state_management":{"stateful":"boolean","state_schema":{},"persistence_method":"string"}},"integration_code":{"api_clients":["string"],"database_connections":["string"],"message_queue_handlers":["string"],"authentication_handlers":["string"]},"code_quality_requirements":{"programming_language":"python|javascript|java","coding_standards":["string"],"required_patterns":["string"],"logging_level":"ERROR|WARN|INFO|DEBUG","test_coverage_percentage":"number"}},"deployment_manager_requirements":{"context":"string","deployment_configuration":{"agent_name":"string","environment":"development|staging|production","deployment_strategy":"blue-green|canary|rolling|direct","region":"string(AWSregion)"},"infrastructure_specifications":{"compute":{"service":"lambda|ecs|ec2","memory_mb":"number","cpu_units":"number","timeout_seconds":"number","reserved_concurrency":"number","ephemeral_storage_mb":"number"},"storage":{"primary_storage":{"service":"dynamodb|s3|rds|elasticache","capacity":"string","backup_required":"boolean","retention_days":"number"},"cache":{"service":"elasticache|dynamodb","ttl_seconds":"number"}},"networking":{"vpc_required":"boolean","subnets":["string"],"security_groups":["string"],"api_gateway":{"required":"boolean","type":"rest|http|websocket","cors_enabled":"boolean"}}},"iam_requirements":{"execution_role_permissions":["string"],"service_integrations":["string"],"cross_account_access":"boolean","secrets_manager_access":["string"]},"monitoring_configuration":{"cloudwatch_metrics":[{"metric_name":"string","namespace":"string","dimensions":["string"]}],"alarms":[{"alarm_name":"string","metric":"string","threshold":"number","comparison_operator":"string","evaluation_periods":"number","sns_topic":"string"}],"logging":{"log_group":"string","retention_days":"number","log_level":"ERROR|WARN|INFO|DEBUG"},"tracing":{"xray_enabled":"boolean","sampling_rate":"number"}},"deployment_automation":{"infrastructure_as_code":"cloudformation|cdk|terraform","ci_cd_pipeline":"codepipeline|github-actions|jenkins","automated_testing":"boolean","rollback_strategy":"automatic|manual"}},"validation_framework":{"context":"string","acceptance_criteria":{"functional_requirements":[{"requirement_id":"FR-XXX","description":"string","test_method":"unit|integration|e2e","expected_outcome":"string","priority":"P0|P1|P2"}],"non_functional_requirements":[{"requirement_id":"NFR-XXX","category":"performance|security|reliability","metric":"string","target_value":"string","measurement_method":"string"}]},"test_scenarios":[{"scenario_id":"TS-XXX","scenario_name":"string","given":"string(preconditions)","when":"string(actions)","then":"string(expectedresults)","test_data":{}}],"validation_checklist":{"solution_architect_deliverables":[{"item":"string","validation_method":"string","pass_criteria":"string"}],"code_generator_deliverables":[{"item":"string","validation_method":"string","pass_criteria":"string"}],"deployment_manager_deliverables":[{"item":"string","validation_method":"string","pass_criteria":"string"}]},"integration_tests":[{"test_name":"string","components_involved":["string"],"test_steps":["string"],"expected_behavior":"string","rollback_procedure":"string"}],"performance_benchmarks":{"latency":{"p50_ms":"number","p95_ms":"number","p99_ms":"number"},"throughput":{"requests_per_second":"number","concurrent_connections":"number"},"error_rates":{"acceptable_error_rate":"number","timeout_rate":"number"},"resource_utilization":{"cpu_threshold":"number","memory_threshold":"number"}},"security_validation":[{"check_name":"string","validation_type":"static|dynamic|penetration","tools":["string"],"pass_criteria":"string"}]},"risk_assessment":{"technical_risks":[{"risk":"string","probability":"low|medium|high","impact":"low|medium|high","mitigation":"string"}],"operational_risks":[{"risk":"string","probability":"low|medium|high","impact":"low|medium|high","mitigation":"string"}],"compliance_risks":[{"risk":"string","probability":"low|medium|high","impact":"low|medium|high","mitigation":"string"}],"contingency_plans":[{"scenario":"string","response_plan":"string","responsible_party":"string"}]}}},"required":["solution_architect_requirements","code_generator_requirements","deployment_manager_requirements","validation_framework"]}}}'
      ActionGroups:
        - ActionGroupName: supervisor-orchestration
          Description: Orchestrates collaborator agents with AgentCore Memory rate limiting
          ActionGroupExecutor:
            Lambda: !GetAtt SupervisorLambdaFunction.Arn
          ApiSchema:
            S3:
              S3BucketName: !Ref DeploymentBucket
              S3ObjectKey: schemas/supervisor-schema.yaml
      Tags:
        Environment: !Ref Environment
        Application: AutoNinja
  AgentAlias:
    Type: AWS::Bedrock::AgentAlias
    Properties:
      AgentId: !GetAtt Agent.AgentId
      AgentAliasName: production
      Description: Production alias for Supervisor agent
  SupervisorLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref SupervisorLambdaFunction
      Action: lambda:InvokeFunction
      Principal: bedrock.amazonaws.com
      SourceArn: !GetAtt Agent.AgentArn
  AgentLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/bedrock/agents/autoninja-supervisor-${Environment}
      RetentionInDays: !Ref LogRetentionDays
Outputs:
  AgentId:
    Description: Supervisor Agent ID
    Value: !GetAtt Agent.AgentId
    Export:
      Name: !Sub ${AWS::StackName}-AgentId
  AgentArn:
    Description: Supervisor Agent ARN
    Value: !GetAtt Agent.AgentArn
    Export:
      Name: !Sub ${AWS::StackName}-AgentArn
  AgentAliasId:
    Description: Supervisor Agent Alias ID
    Value: !GetAtt AgentAlias.AgentAliasId
    Export:
      Name: !Sub ${AWS::StackName}-AgentAliasId
  InvocationCommand:
    Description: Command to invoke the supervisor agent
    Value: !Sub |
      aws bedrock-agent-runtime invoke-agent \
        --agent-id ${Agent.AgentId} \
        --agent-alias-id ${AgentAlias.AgentAliasId} \
        --session-id job-$(date +%s) \
        --input-text "Build a customer service agent for insurance claims" \
        --enable-trace \
        --region ${AWS::Region} \
        output.json