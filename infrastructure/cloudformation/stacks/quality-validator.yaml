AWSTemplateFormatVersion: '2010-09-09'
Description: |
  AutoNinja Quality Validator Stack - Bedrock Agent, Lambda function, and IAM roles for code validation.
Parameters:
  Environment:
    Type: String
    Description: Deployment environment
    Default: production
  BedrockModel:
    Type: String
    Description: Foundation model ID for Bedrock Agent
    Default: us.amazon.nova-premier-v1:0
  DeploymentBucket:
    Type: String
    Description: S3 bucket containing Lambda deployment packages and CloudFormation templates
    Default: autoninja-deployment-artifacts-us-east-2
  InferenceRecordsTableName:
    Type: String
    Description: DynamoDB inference records table name
  InferenceRecordsTableArn:
    Type: String
    Description: DynamoDB inference records table ARN
  ArtifactsBucketName:
    Type: String
    Description: S3 artifacts bucket name
  ArtifactsBucketArn:
    Type: String
    Description: S3 artifacts bucket ARN
  LambdaBasePolicyArn:
    Type: String
    Description: ARN of the base Lambda policy
  LambdaLayerArn:
    Type: String
    Description: ARN of the shared Lambda layer
  LogRetentionDays:
    Type: Number
    Description: CloudWatch log retention period in days
    Default: 30
  AgentCoreMemoryId:
    Type: String
    Description: AgentCore Memory ID for global rate limiting
  AgentCoreMemoryArn:
    Type: String
    Description: AgentCore Memory ARN for global rate limiting
  InferenceProfileModelId:
    Type: String
    Description: Inference profile model ID for cross-region access
    Default: us.amazon.nova-premier-v1:0
Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - !Ref LambdaBasePolicyArn
      Policies:
        - PolicyName: ComprehensiveAgentAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: BedrockModelAccess
                Effect: Allow
                Action:
                  - bedrock:InvokeModel
                  - bedrock:InvokeModelWithResponseStream
                  - bedrock:GetInferenceProfile
                  - bedrock:GetFoundationModel
                Resource:
                  - !Sub arn:aws:bedrock:${AWS::Region}::foundation-model/${BedrockModel}
                  - !Sub arn:aws:bedrock:${AWS::Region}:${AWS::AccountId}:inference-profile/${BedrockModel}
                  - !Sub arn:aws:bedrock:*::foundation-model/${BedrockModel}
              - Sid: BedrockGeneralAccess
                Effect: Allow
                Action:
                  - bedrock:GetInferenceProfile
                  - bedrock:GetFoundationModel
                Resource: '*'
              - Sid: CloudWatchLogsAccess
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/autoninja-*
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/autoninja-*:*
              - Sid: XRayAccess
                Effect: Allow
                Action:
                  - xray:PutTraceSegments
                  - xray:PutTelemetryRecords
                Resource: '*'
              - Sid: DynamoDBInferenceRecordsAccess
                Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:GetItem
                  - dynamodb:Query
                  - dynamodb:UpdateItem
                Resource:
                  - !Ref InferenceRecordsTableArn
                  - !Sub ${InferenceRecordsTableArn}/index/*
              - Sid: S3ArtifactsAccess
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:ListBucket
                Resource:
                  - !Ref ArtifactsBucketArn
                  - !Sub ${ArtifactsBucketArn}/*
              - Sid: S3SchemasAccess
                Effect: Allow
                Action:
                  - s3:GetObject
                Resource:
                  - !Sub arn:aws:s3:::${DeploymentBucket}/schemas/*
              - Sid: AgentCoreMemoryAccess
                Effect: Allow
                Action:
                  - bedrock-agentcore:CreateEvent
                  - bedrock-agentcore:RetrieveMemoryRecords
                  - bedrock-agentcore:BatchCreateMemoryRecords
                Resource:
                  - !Ref AgentCoreMemoryArn
              - Sid: CloudFormationReadAccess
                Effect: Allow
                Action:
                  - cloudformation:DescribeStacks
                Resource:
                  - !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/autoninja-collaborators-*/*
              - Sid: BedrockAgentInvocation
                Effect: Allow
                Action:
                  - bedrock:InvokeAgent
                Resource:
                  - !Sub arn:aws:bedrock:${AWS::Region}:${AWS::AccountId}:agent-alias/*
      Tags:
        - Key: Application
          Value: AutoNinja
  AgentRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: bedrock.amazonaws.com
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref AWS::AccountId
              ArnLike:
                aws:SourceArn: !Sub arn:aws:bedrock:${AWS::Region}:${AWS::AccountId}:agent/*
      Policies:
        - PolicyName: BedrockAgentPermissions
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - bedrock:InvokeModel
                  - bedrock:InvokeModelWithResponseStream
                Resource:
                  - !Sub arn:aws:bedrock:${AWS::Region}::foundation-model/${BedrockModel}
                  - !Sub arn:aws:bedrock:${AWS::Region}:${AWS::AccountId}:inference-profile/${BedrockModel}
                  - !Sub arn:aws:bedrock:*::foundation-model/*
                  - !Sub arn:aws:bedrock:*:${AWS::AccountId}:inference-profile/*
              - Effect: Allow
                Action:
                  - bedrock:GetInferenceProfile
                  - bedrock:GetFoundationModel
                Resource: '*'
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource:
                  - !Sub arn:aws:s3:::${DeploymentBucket}/schemas/*
              - Effect: Allow
                Action:
                  - s3:ListBucket
                Resource:
                  - !Sub arn:aws:s3:::${DeploymentBucket}
              - Sid: AgentCoreMemoryAccess
                Effect: Allow
                Action:
                  - bedrock-agentcore:CreateEvent
                  - bedrock-agentcore:RetrieveMemoryRecords
                  - bedrock-agentcore:BatchCreateMemoryRecords
                Resource:
                  - !Ref AgentCoreMemoryArn
      Tags:
        - Key: Application
          Value: AutoNinja
  Agent:
    Type: AWS::Bedrock::Agent
    Properties:
      AgentName: !Sub autoninja-quality-validator-${Environment}
      Description: Quality Validator agent - validates code quality, security, and compliance
      AgentResourceRoleArn: !GetAtt AgentRole.Arn
      FoundationModel: !Ref BedrockModel
      AgentCollaboration: DISABLED
      IdleSessionTTLInSeconds: 1800
      AutoPrepare: true
      Instruction: |
        You are a Senior Security Engineer and Code Quality Expert specializing in AWS security, compliance, and quality assurance.
      PromptOverrideConfiguration:
        PromptConfigurations:
          - PromptType: ORCHESTRATION
            PromptCreationMode: OVERRIDDEN
            PromptState: ENABLED
            InferenceConfiguration:
              Temperature: 0
              StopSequences: []
            BasePromptTemplate: '{"schemaVersion":"messages-v1","system":[{"text":"YouaretheQualityValidator(QV)forAutoninja,thecentralqualitygateforallagentdeliverables.\n\n##YourInputs\n\n###Input1:FromRequirementsAnalyst(Initial)\nYoureceivetheCOMPLETErequirementsJSONcontainingallsub-agentrequirements.Storethisasyourvalidationbaseline.\n\n###Input2-4:FromIndividualSub-Agents\nYoureceiveoutputsfromeachagentseparatelyastheycompletetheirwork.\n\n##YourValidationProcess\n\n###WhenYouReceiveSolutionArchitectOutput\n\n1.LoadtheSArequirementsfromyourstoredcompleteJSON\n2.Validatethedeliverables:\n{\\\"validation_type\\\":\\\"solution_architect\\\",\\\"checks\\\":[\\\"DoesCloudFormationtemplateincludeallrequiredservices?\\\",\\\"Arescalabilityrequirementsaddressed?\\\",\\\"Isthearchitecturecost-optimized?\\\",\\\"Aresecuritybestpracticesfollowed?\\\"]}\n3.GeneratevalidationreportwithPASS/FAILstatus\n\n###WhenYouReceiveCodeGeneratorOutput\n\n1.LoadtheCGrequirementsfromyourstoredcompleteJSON\n2.Validatethecode:\n{\\\"validation_type\\\":\\\"code_generator\\\",\\\"checks\\\":[\\\"Areallrequiredfunctionsimplemented?\\\",\\\"Dofunctionsmatchspecifiedsignatures?\\\",\\\"Iserrorhandlingcomprehensive?\\\",\\\"Arepromptssafeandeffective?\\\"]}\n3.Runautomatedtestsifprovided\n4.Generatevalidationreport\n\n###WhenYouReceiveDeploymentManagerOutput\n\n1.LoadtheDMrequirementsfromyourstoredcompleteJSON\n2.Validatedeploymentconfiguration:\n{\\\"validation_type\\\":\\\"deployment_manager\\\",\\\"checks\\\":[\\\"Areallresourcesproperlyconfigured?\\\",\\\"Ismonitoringcorrectlysetup?\\\",\\\"AreIAMpermissionsminimal?\\\",\\\"Canthestackdeploysuccessfully?\\\"]}\n3.MayiteratewithDM(bidirectionalcommunication)forfixes\n4.Generatefinalvalidationreport\n\n##ValidationOutputFormat\n\nForeachagentvalidation,output:\n\n{\\\"validation_report\\\":{\\\"agent_validated\\\":\\\"solution_architect|code_generator|deployment_manager\\\",\\\"request_id\\\":\\\"uuid\\\",\\\"timestamp\\\":\\\"ISO-8601\\\",\\\"overall_status\\\":\\\"PASS|FAIL|NEEDS_REVISION\\\",\\\"requirements_validation\\\":[{\\\"requirement_id\\\":\\\"string\\\",\\\"requirement_text\\\":\\\"string\\\",\\\"validation_status\\\":\\\"PASS|FAIL\\\",\\\"evidence\\\":\\\"string\\\",\\\"issues\\\":[\\\"string\\\"]}],\\\"deliverable_assessment\\\":{\\\"completeness_score\\\":95,\\\"quality_score\\\":90,\\\"compliance_score\\\":100},\\\"action_items\\\":{\\\"critical_fixes\\\":[\\\"string\\\"],\\\"recommendations\\\":[\\\"string\\\"],\\\"can_proceed\\\":true}}}\n\n###SpecialHandling:DeploymentManagerIteration\n\nThebidirectionalcommunicationwithDMindicatesiterativevalidation:\n\n{\\\"deployment_feedback\\\":{\\\"status\\\":\\\"REVISION_NEEDED\\\",\\\"issues\\\":[\\\"IAMrolemissingS3readpermissions\\\",\\\"CloudWatchalarmthresholdtoolow\\\"],\\\"suggested_fixes\\\":[\\\"AddS3:GetObjectpermissiontoexecutionrole\\\",\\\"Increasealarmthresholdto100\\\"]}}\n\n###ValidationStateManagement\n\nMaintainstateacrossallvalidations:\n\n{\\\"validation_state\\\":{\\\"solution_architect\\\":\\\"COMPLETED\\\",\\\"code_generator\\\":\\\"IN_PROGRESS\\\",\\\"deployment_manager\\\":\\\"NOT_STARTED\\\",\\\"overall_readiness\\\":false,\\\"blocking_issues\\\":[\\\"CGfunctiontestsfailing\\\"]}}\n\n##Example:CompleteSAValidation\n\nWhenvalidatingSolutionArchitectdeliverables,performthesechecks:\n\n{\\\"sa_validation_checklist\\\":{\\\"architecture_review\\\":{\\\"cloudformation_template_valid\\\":true,\\\"required_services\\\":[\\\"Lambda\\\",\\\"DynamoDB\\\",\\\"APIGateway\\\"],\\\"services_configured\\\":[\\\"Lambda\\\",\\\"DynamoDB\\\",\\\"APIGateway\\\"],\\\"missing_services\\\":[]},\\\"scalability_review\\\":{\\\"auto_scaling_configured\\\":true,\\\"min_capacity\\\":1,\\\"max_capacity\\\":10,\\\"meets_requirement\\\":true},\\\"cost_optimization\\\":{\\\"estimated_monthly_cost\\\":150,\\\"budget_limit\\\":200,\\\"within_budget\\\":true,\\\"cost_optimizations\\\":[\\\"UsingLambdaoverEC2\\\",\\\"DynamoDBon-demandpricing\\\"]},\\\"security_review\\\":{\\\"iam_least_privilege\\\":true,\\\"encryption_enabled\\\":true,\\\"vpc_configuration\\\":\\\"appropriate\\\",\\\"security_groups_restrictive\\\":true}}}"}],"messages":[{"role":"user","content":[{"text":"$question$"}]}],"inferenceConfig":{"temperature":0,"maxTokens":64000,"topP":0.9,"stopSequences":[]},"additionalModelRequestFields":{"inferenceConfig":{"outputSchema":{"type":"object","properties":{"validation_report":{"type":"object","properties":{"agent_validated":{"type":"string","enum":["solution_architect","code_generator","deployment_manager"]},"request_id":{"type":"string"},"timestamp":{"type":"string"},"overall_status":{"type":"string","enum":["PASS","FAIL","NEEDS_REVISION"]},"requirements_validation":{"type":"array","items":{"type":"object","properties":{"requirement_id":{"type":"string"},"requirement_text":{"type":"string"},"validation_status":{"type":"string"},"evidence":{"type":"string"},"issues":{"type":"array","items":{"type":"string"}}}}},"deliverable_assessment":{"type":"object","properties":{"completeness_score":{"type":"number"},"quality_score":{"type":"number"},"compliance_score":{"type":"number"}}},"action_items":{"type":"object","properties":{"critical_fixes":{"type":"array","items":{"type":"string"}},"recommendations":{"type":"array","items":{"type":"string"}},"can_proceed":{"type":"boolean"}}}},"required":["agent_validated","request_id","overall_status"]}},"required":["validation_report"]}}}}'
      Tags:
        Application: AutoNinja
  AgentAlias:
    Type: AWS::Bedrock::AgentAlias
    Properties:
      AgentId: !GetAtt Agent.AgentId
      AgentAliasName: production
      Description: Production alias for Quality Validator agent
Outputs:
  AgentId:
    Description: Quality Validator Agent ID
    Value: !GetAtt Agent.AgentId
    Export:
      Name: !Sub ${AWS::StackName}-AgentId
  AgentArn:
    Description: Quality Validator Agent ARN
    Value: !GetAtt Agent.AgentArn
    Export:
      Name: !Sub ${AWS::StackName}-AgentArn
  AgentAliasId:
    Description: Quality Validator Agent Alias ID
    Value: !GetAtt AgentAlias.AgentAliasId
    Export:
      Name: !Sub ${AWS::StackName}-AgentAliasId